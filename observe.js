// Generated by CoffeeScript 2.0.2
(function() {
  var Client, Identity, sleep, tradfri;

  Client = require('node-tradfri-client').TradfriClient;

  Identity = require('./identity');

  sleep = function(time = 10) {
    return new Promise(function(resolve, reject) {
      return setTimeout(resolve, time * 1000);
    });
  };

  tradfri = new Client(Identity.host);

  (async function() {
    var changed, devices, starting, success;
    starting = true;
    success = (await tradfri.connect(Identity.identity, Identity.psk));
    console.log(`Success: ${success}`);
    devices = changed = [];
    tradfri.on('device updated', function(device) {
      if (starting) {
        return devices.push(device.name);
      } else {
        return changed.push(device.name);
      }
    });
    return tradfri.observeDevices(function(response) {}).then(async function(response) {
      var count, dev;
      starting = false;
      count = 0;
      for (dev in devices.sort()) {
        console.log(`${count++} ${dev}`);
      }
      console.log('--------------------------------------');
      process.env.DEBUG = 'node-*-client';
      await sleep(5);
      return console.log(changed.sort());
    }).catch(function(err) {
      return console.error(`ERROR: ${err}`);
    });
  })();

}).call(this);
